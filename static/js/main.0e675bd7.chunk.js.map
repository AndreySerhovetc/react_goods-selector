{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selectedGoods","addToSelectedGood","good","setState","removeToSelectedGood","includes","index","lastIndexOf","splice","resetState","this","className","length","join","type","onClick","map","classNames","card__active","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qQAIMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAmGaC,E,4MA3FbC,MAAe,CACbC,cAAe,I,EAGjBC,kBAAoB,SAACC,GACnB,EAAKC,UAAS,SAACJ,GAAD,MAAY,CACxBC,cAAc,GAAD,mBAAMD,EAAMC,eAAZ,CAA2BE,S,EAI5CE,qBAAuB,SAACF,GACtB,IAAQF,EAAkB,EAAKD,MAAvBC,cAER,GAAIA,EAAcK,SAASH,GAAO,CAChC,IAAMI,EAAQN,EAAcO,YAAYL,GAExCF,EAAcQ,OAAOF,EAAO,GAG9B,EAAKH,UAAS,SAACJ,GAAD,MAAY,CACxBC,cAAc,YAAKD,EAAMC,oB,EAI7BS,WAAa,WACX,EAAKN,SAAS,CACZH,cAAe,M,4CAInB,WACE,IAAQA,EAAkBU,KAAKX,MAAvBC,cACAC,EAAwDS,KAAxDT,kBAAmBG,EAAqCM,KAArCN,qBAAsBK,EAAeC,KAAfD,WAEjD,OACE,sBAAKE,UAAU,MAAf,UACE,oBAAIA,UAAU,aAAd,SACGX,EAAcY,OAAd,UACOZ,EAAca,KAAK,MAD1B,aAEI,sBAENb,EAAcY,OAEX,wBACED,UAAU,6BACVG,KAAK,SACLC,QAASN,EAHX,mBAQA,KACJ,qBAAKE,UAAU,YAAf,SACGd,EAAgBmB,KAAI,SAAAd,GAAI,OACvB,sBAAKS,UAAWM,IACd,OACA,CAAEC,aAAclB,EAAcK,SAASH,KAFzC,UAKE,oBAAIS,UAAU,cAAd,SACGT,GAD8BA,GAGjC,sBAAKS,UAAU,WAAf,UACE,wBACEA,UAAU,8BACVG,KAAK,SACLC,QAAS,WACPd,EAAkBC,IAJtB,oBAUA,wBACES,UAAU,8BACVG,KAAK,SACLC,QAAS,WACPX,EAAqBF,IAJzB,sC,GA1EEiB,IAAMC,WClBxBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.0e675bd7.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ninterface State {\n  selectedGoods: string[];\n}\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    selectedGoods: [],\n  };\n\n  addToSelectedGood = (good: string) => {\n    this.setState((state) => ({\n      selectedGoods: [...state.selectedGoods, good],\n    }));\n  };\n\n  removeToSelectedGood = (good: string) => {\n    const { selectedGoods } = this.state;\n\n    if (selectedGoods.includes(good)) {\n      const index = selectedGoods.lastIndexOf(good);\n\n      selectedGoods.splice(index, 1);\n    }\n\n    this.setState((state) => ({\n      selectedGoods: [...state.selectedGoods],\n    }));\n  };\n\n  resetState = () => {\n    this.setState({\n      selectedGoods: [],\n    });\n  };\n\n  render() {\n    const { selectedGoods } = this.state;\n    const { addToSelectedGood, removeToSelectedGood, resetState } = this;\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"App__title\">\n          {selectedGoods.length\n            ? (`${selectedGoods.join(', ')} selected`)\n            : ('No goods selected')}\n        </h1>\n        {selectedGoods.length\n          ? (\n            <button\n              className=\"card__btn card__btn--reset\"\n              type=\"button\"\n              onClick={resetState}\n            >\n              Clear\n            </button>\n          )\n          : null}\n        <div className=\"container\">\n          {goodsFromServer.map(good => (\n            <div className={classNames(\n              'card',\n              { card__active: selectedGoods.includes(good) },\n            )}\n            >\n              <h2 className=\"card__title\" key={good}>\n                {good}\n              </h2>\n              <div className=\"card-btn\">\n                <button\n                  className=\"card__btn card__btn--select\"\n                  type=\"button\"\n                  onClick={() => {\n                    addToSelectedGood(good);\n                  }}\n                >\n                  Select\n                </button>\n\n                <button\n                  className=\"card__btn card__btn--remove\"\n                  type=\"button\"\n                  onClick={() => {\n                    removeToSelectedGood(good);\n                  }}\n                >\n                  Remove\n                </button>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}